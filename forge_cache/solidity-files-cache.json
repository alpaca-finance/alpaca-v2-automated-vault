{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol": {
      "lastModificationDate": 1685508250733,
      "contentHash": "9d04eb37270844cd3036faaee4f180b0",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IAdminFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAdminFacet.sol/IAdminFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol": {
      "lastModificationDate": 1685508250733,
      "contentHash": "bcc4a299df217e14109c2091a22cea6d",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IBorrowFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBorrowFacet.sol/IBorrowFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol": {
      "lastModificationDate": 1685508250733,
      "contentHash": "2d5ab3186abe99b805e87d3fd5e7d784",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ICollateralFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ICollateralFacet.sol/ICollateralFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol": {
      "lastModificationDate": 1685508250734,
      "contentHash": "ad9f8bc94450bdd8ebd1ab66e81f2e2a",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IFeeModel": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IFeeModel.sol/IFeeModel.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol": {
      "lastModificationDate": 1685508250734,
      "contentHash": "ab701819933a4d31d61a82465def9303",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ILendFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ILendFacet.sol/ILendFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol": {
      "lastModificationDate": 1685508250734,
      "contentHash": "dbc5f297afc5813ea937e968ffbfc62f",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ILiquidationFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ILiquidationFacet.sol/ILiquidationFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol": {
      "lastModificationDate": 1685508250735,
      "contentHash": "347b14274400efea62ecb4a8b60d8b18",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IMoneyMarket": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMoneyMarket.sol/IMoneyMarket.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol": {
      "lastModificationDate": 1685508250735,
      "contentHash": "286a2ae5eff33932754c7d68da9aa6e2",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "INonCollatBorrowFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "INonCollatBorrowFacet.sol/INonCollatBorrowFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol": {
      "lastModificationDate": 1685508250736,
      "contentHash": "f35ee0bcbddaa917c03932dd6565ef27",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IViewFacet": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IViewFacet.sol/IViewFacet.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol": {
      "lastModificationDate": 1685508250737,
      "contentHash": "c71559bc72217690e22dd1614a686c3b",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibConstant": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibConstant.sol/LibConstant.json"
        }
      }
    },
    "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol": {
      "lastModificationDate": 1685508250737,
      "contentHash": "1ef0bfa81bd9efcc8296c4888ff43171",
      "sourceName": "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibDoublyLinkedList": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibDoublyLinkedList.sol/LibDoublyLinkedList.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1685508252400,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1685508251004,
      "contentHash": "8f04bbbb2c16f79e14fdc321695a8ec2",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1685508251004,
      "contentHash": "83c39354c1e43190bce4dc43860dc786",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1685508251004,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1685508251005,
      "contentHash": "9c76820952c8f5e2fc02f872dc3afeb4",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1685508251005,
      "contentHash": "1f7c1fe2f20a051b847336e1630e4bb5",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1685508251005,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1685508251006,
      "contentHash": "12c06010ec43ce935ed209d5aca30828",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1685508251006,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1685508251006,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1685508251006,
      "contentHash": "3cb9868082df39a53927db09dbc21f23",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1685508251007,
      "contentHash": "820e6f6b7704f0c980fae604b1e34b18",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1685508251007,
      "contentHash": "3c8a13d3abf093886cea4e028158b601",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1685508251007,
      "contentHash": "bc9d74a0c612e1c2b66cca2973bcc803",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1685508251008,
      "contentHash": "2873383b1217375a8baccae57b02f0b0",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1685508251009,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1685508251010,
      "contentHash": "2096b4e5f252c5df9909cccbe3d2da2e",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1685508251011,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1685508252574,
      "contentHash": "e436cea06129be2c73cda4b1acc848b5",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
      "lastModificationDate": 1685508252582,
      "contentHash": "71e431b9bec8ee79c019265063e11431",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1967": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC1967.sol/IERC1967.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1685508252584,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "draft-IERC1822.sol/IERC1822Proxiable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
      "lastModificationDate": 1685508252600,
      "contentHash": "11535a839f5494023c396098504f5646",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Clones": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Clones.sol/Clones.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "lastModificationDate": 1685508252600,
      "contentHash": "3fc3c7c0a2956f36e766691bb9473b06",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1967Proxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1967Proxy.sol/ERC1967Proxy.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1685508252600,
      "contentHash": "02cd73b0fd6f712455af4c12ffd59ceb",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967Upgrade": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1967Upgrade.sol/ERC1967Upgrade.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
      "lastModificationDate": 1685508252600,
      "contentHash": "40b3d81a836d50ff47e03893dcaaf204",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Proxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Proxy.sol/Proxy.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1685508252601,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeacon": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBeacon.sol/IBeacon.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
      "lastModificationDate": 1685508252601,
      "contentHash": "9891986e27d357222a8ac8c0c13abe31",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ProxyAdmin": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ProxyAdmin.sol/ProxyAdmin.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
      "lastModificationDate": 1685508252601,
      "contentHash": "2d9767fae10a097aa9022b9e7c03c9ad",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ITransparentUpgradeableProxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TransparentUpgradeableProxy.sol/ITransparentUpgradeableProxy.json"
        },
        "TransparentUpgradeableProxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TransparentUpgradeableProxy.sol/TransparentUpgradeableProxy.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1685508252601,
      "contentHash": "19c4fbc3e825d25231b09f13aff9a2b2",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "proxy/utils/Initializable.sol/Initializable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1685508252612,
      "contentHash": "f31ad6fc4bbf9c06203987220156a6ba",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1685508252613,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Multicall.sol": {
      "lastModificationDate": 1685508252613,
      "contentHash": "8a997d859de7e871118021136bb5094e",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Multicall": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Multicall.sol/Multicall.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1685508252613,
      "contentHash": "f993f8f50186952a59ee5e3a30b68222",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlot": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StorageSlot.sol/StorageSlot.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
      "lastModificationDate": 1685508255613,
      "contentHash": "2bfba31e94f518f2027f875382ee352e",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable2StepUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Ownable2StepUpgradeable.sol/Ownable2StepUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "lastModificationDate": 1685508255613,
      "contentHash": "403ce8273abde646bff81558ddf512ad",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OwnableUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "OwnableUpgradeable.sol/OwnableUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1685508255660,
      "contentHash": "fc5844e59776a976987884e4d9814c7d",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "utils/Initializable.sol/Initializable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
      "lastModificationDate": 1685508255661,
      "contentHash": "1453fc85149da6598faf08c46b88182d",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuardUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ReentrancyGuardUpgradeable.sol/ReentrancyGuardUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
      "lastModificationDate": 1685508255676,
      "contentHash": "228f256dbb21393bc9ad02648e222f74",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "AddressUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AddressUpgradeable.sol/AddressUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1685508255678,
      "contentHash": "6200b84950eb05b4a92a39fd1d6e0f9b",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ContextUpgradeable.sol/ContextUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
      "lastModificationDate": 1685508255684,
      "contentHash": "8565f9d83dfbed34d9ff896c02e23ae7",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeCastUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeCastUpgradeable.sol/SafeCastUpgradeable.json"
        }
      }
    },
    "lib/solmate/src/tokens/ERC20.sol": {
      "lastModificationDate": 1685508258901,
      "contentHash": "0c7c7ada139062536af09d69d96d395c",
      "sourceName": "lib/solmate/src/tokens/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {
        "ERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20.sol/ERC20.json"
        }
      }
    },
    "lib/solmate/src/utils/FixedPointMathLib.sol": {
      "lastModificationDate": 1685508258902,
      "contentHash": "3945241174f1c8fdcd51c2571f8ec92e",
      "sourceName": "lib/solmate/src/utils/FixedPointMathLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {
        "FixedPointMathLib": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "FixedPointMathLib.sol/FixedPointMathLib.json"
        }
      }
    },
    "lib/solmate/src/utils/SafeCastLib.sol": {
      "lastModificationDate": 1685508258903,
      "contentHash": "2934cf104bbd701a29c6666e89257f4c",
      "sourceName": "lib/solmate/src/utils/SafeCastLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {
        "SafeCastLib": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeCastLib.sol/SafeCastLib.json"
        }
      }
    },
    "lib/solmate/src/utils/SafeTransferLib.sol": {
      "lastModificationDate": 1685508258903,
      "contentHash": "668dd0a8a175344c51036ae7fcb01d36",
      "sourceName": "lib/solmate/src/utils/SafeTransferLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {
        "SafeTransferLib": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeTransferLib.sol/SafeTransferLib.json"
        }
      }
    },
    "script/BaseScript.sol": {
      "lastModificationDate": 1686905762161,
      "contentHash": "8dd60347c0ffc179487327833eee3d5c",
      "sourceName": "script/BaseScript.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "BaseScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BaseScript.sol/BaseScript.json"
        }
      }
    },
    "script/deployments/AutomatedVaultERC20/deploy/DeployAutomatedVaultERC20Implementation.s.sol": {
      "lastModificationDate": 1686907362365,
      "contentHash": "f8c2b9010925af2c7c80a3f1bf2a4aff",
      "sourceName": "script/deployments/AutomatedVaultERC20/deploy/DeployAutomatedVaultERC20Implementation.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "script/BaseScript.sol",
        "src/AutomatedVaultERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployAutomatedVaultERC20ImplementationScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployAutomatedVaultERC20Implementation.s.sol/DeployAutomatedVaultERC20ImplementationScript.json"
        }
      }
    },
    "script/deployments/AutomatedVaultManager/deploy/DeployAutomatedVaultManager.s.sol": {
      "lastModificationDate": 1686910193006,
      "contentHash": "1e304a78ca1412829de5f44ac274cf77",
      "sourceName": "script/deployments/AutomatedVaultManager/deploy/DeployAutomatedVaultManager.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployAutomatedVaultManagerScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployAutomatedVaultManager.s.sol/DeployAutomatedVaultManagerScript.json"
        }
      }
    },
    "script/deployments/Bank/deploy/DeployBank.s.sol": {
      "lastModificationDate": 1686907484516,
      "contentHash": "e859a1c3f8b3f11db5c495e1d0c0c5f3",
      "sourceName": "script/deployments/Bank/deploy/DeployBank.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployMoneyMarketForTestScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployBank.s.sol/DeployMoneyMarketForTestScript.json"
        }
      }
    },
    "script/deployments/Executor/deploy/DeployPCSV3Executor01.s.sol": {
      "lastModificationDate": 1686910413927,
      "contentHash": "089d68a673e2d017ca866f434642b426",
      "sourceName": "script/deployments/Executor/deploy/DeployPCSV3Executor01.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployPCSV3Executor01Script": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployPCSV3Executor01.s.sol/DeployPCSV3Executor01Script.json"
        }
      }
    },
    "script/deployments/MoneyMarketForTest/config/InjectFund.s.sol": {
      "lastModificationDate": 1686910193004,
      "contentHash": "bc012c18da16fcffeb12d1b09da4c567",
      "sourceName": "script/deployments/MoneyMarketForTest/config/InjectFund.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/MoneyMarketForTest.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "InjectFundScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "InjectFund.s.sol/InjectFundScript.json"
        }
      }
    },
    "script/deployments/MoneyMarketForTest/config/SetBorrower.s.sol": {
      "lastModificationDate": 1686910193005,
      "contentHash": "c6356a076991a0edc820e0a35a0cc41c",
      "sourceName": "script/deployments/MoneyMarketForTest/config/SetBorrower.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/MoneyMarketForTest.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SetBorrowerScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetBorrower.s.sol/SetBorrowerScript.json"
        }
      }
    },
    "script/deployments/MoneyMarketForTest/config/SetInterestRatePerSec.s.sol": {
      "lastModificationDate": 1686910193004,
      "contentHash": "9a19653ffe1a3859e0ae63848b795aec",
      "sourceName": "script/deployments/MoneyMarketForTest/config/SetInterestRatePerSec.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/MoneyMarketForTest.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "InjectFundScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetInterestRatePerSec.s.sol/InjectFundScript.json"
        }
      }
    },
    "script/deployments/MoneyMarketForTest/deploy/DeployMoneyMarketForTest.s.sol": {
      "lastModificationDate": 1686907514441,
      "contentHash": "eecf64dab29e3e991cd635eea5567de0",
      "sourceName": "script/deployments/MoneyMarketForTest/deploy/DeployMoneyMarketForTest.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/MoneyMarketForTest.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployMoneyMarketForTestScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployMoneyMarketForTest.s.sol/DeployMoneyMarketForTestScript.json"
        }
      }
    },
    "script/deployments/ProxyAdmin/deploy/DeployProxyAdmin.s.sol": {
      "lastModificationDate": 1686905762165,
      "contentHash": "cc52c21a3661fcb43a8daad12f49fe6e",
      "sourceName": "script/deployments/ProxyAdmin/deploy/DeployProxyAdmin.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "script/BaseScript.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployProxyAdminScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployProxyAdmin.s.sol/DeployProxyAdminScript.json"
        }
      }
    },
    "script/deployments/VaultOracle/config/SetPriceFeedOf.s.sol": {
      "lastModificationDate": 1686910193002,
      "contentHash": "f023b25d733a0f2f9ba3620e2e43d78e",
      "sourceName": "script/deployments/VaultOracle/config/SetPriceFeedOf.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "script/BaseScript.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SetPriceFeedOfScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetPriceFeedOf.s.sol/SetPriceFeedOfScript.json"
        }
      }
    },
    "script/deployments/VaultOracle/deploy/DeployPancakeV3VaultOracle.s.sol": {
      "lastModificationDate": 1686910193004,
      "contentHash": "c3d53375988dc6c0a5baafeefae7cb45",
      "sourceName": "script/deployments/VaultOracle/deploy/DeployPancakeV3VaultOracle.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibLiquidityAmounts.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibSqrtPriceX96.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/oracles/PancakeV3VaultOracle.sol",
        "src/workers/PancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployPancakeV3VaultOracleScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployPancakeV3VaultOracle.s.sol/DeployPancakeV3VaultOracleScript.json"
        }
      }
    },
    "script/deployments/Worker/deploy/DeployPancakeV3Worker.s.sol": {
      "lastModificationDate": 1686905762165,
      "contentHash": "816f010b7b32fb2e7db31dfbc27ec582",
      "sourceName": "script/deployments/Worker/deploy/DeployPancakeV3Worker.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "script/BaseScript.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployPancakeV3WorkerScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployPancakeV3Worker.s.sol/DeployPancakeV3WorkerScript.json"
        }
      }
    },
    "src/AutomatedVaultERC20.sol": {
      "lastModificationDate": 1686898758327,
      "contentHash": "efb2c8d998891c8ec497da2654fb81a5",
      "sourceName": "src/AutomatedVaultERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultERC20.sol/AutomatedVaultERC20.json"
        }
      }
    },
    "src/AutomatedVaultManager.sol": {
      "lastModificationDate": 1686905762167,
      "contentHash": "931183f92e870402cbc8636aed15a678",
      "sourceName": "src/AutomatedVaultManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultManager": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager.sol/AutomatedVaultManager.json"
        }
      }
    },
    "src/Bank.sol": {
      "lastModificationDate": 1686905762169,
      "contentHash": "ea3c1646874dfabe1a5c25032f5bb982",
      "sourceName": "src/Bank.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Bank": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Bank.sol/Bank.json"
        }
      }
    },
    "src/MoneyMarketForTest.sol": {
      "lastModificationDate": 1686905762170,
      "contentHash": "1e74adfc178db4d7cbe9bec4654132e8",
      "sourceName": "src/MoneyMarketForTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MoneyMarketForTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MoneyMarketForTest.sol/MoneyMarketForTest.json"
        }
      }
    },
    "src/executors/Executor.sol": {
      "lastModificationDate": 1686898758347,
      "contentHash": "56012bae7456298bb8e5f9584c57ab82",
      "sourceName": "src/executors/Executor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Executor": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Executor.sol/Executor.json"
        }
      }
    },
    "src/executors/PCSV3Executor01.sol": {
      "lastModificationDate": 1686898758344,
      "contentHash": "28d9a3c7c6c84d0c008e2426b6b84542",
      "sourceName": "src/executors/PCSV3Executor01.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/executors/Executor.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PCSV3Executor01": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01.sol/PCSV3Executor01.json"
        }
      }
    },
    "src/interfaces/IAlpacaV2Oracle.sol": {
      "lastModificationDate": 1686898758326,
      "contentHash": "6188b33aa52cf398b6453782dfa8441e",
      "sourceName": "src/interfaces/IAlpacaV2Oracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IAlpacaV2Oracle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAlpacaV2Oracle.sol/IAlpacaV2Oracle.json"
        }
      }
    },
    "src/interfaces/IAutomatedVaultERC20.sol": {
      "lastModificationDate": 1686898758326,
      "contentHash": "1e20b8fdae61c7794d5e3d78a3e0dabd",
      "sourceName": "src/interfaces/IAutomatedVaultERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/interfaces/IERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IAutomatedVaultERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAutomatedVaultERC20.sol/IAutomatedVaultERC20.json"
        }
      }
    },
    "src/interfaces/IBank.sol": {
      "lastModificationDate": 1686898758326,
      "contentHash": "7149953e819c53d8b539a652fe44f3a2",
      "sourceName": "src/interfaces/IBank.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IBank": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBank.sol/IBank.json"
        }
      }
    },
    "src/interfaces/IChainlinkAggregator.sol": {
      "lastModificationDate": 1686898758326,
      "contentHash": "8ff49ffd0eeaec9e72c23fc7c62b6aa7",
      "sourceName": "src/interfaces/IChainlinkAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IChainlinkAggregator": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IChainlinkAggregator.sol/IChainlinkAggregator.json"
        }
      }
    },
    "src/interfaces/ICommonV3Pool.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "47c55af9087fd9c42206759f60d800fc",
      "sourceName": "src/interfaces/ICommonV3Pool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ICommonV3Pool": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ICommonV3Pool.sol/ICommonV3Pool.json"
        }
      }
    },
    "src/interfaces/ICommonV3PositionManager.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "f4288230f8f5949e803a03e7200ad4eb",
      "sourceName": "src/interfaces/ICommonV3PositionManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ICommonV3PositionManager": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ICommonV3PositionManager.sol/ICommonV3PositionManager.json"
        }
      }
    },
    "src/interfaces/IERC20.sol": {
      "lastModificationDate": 1686898758327,
      "contentHash": "a75f3509fd1d9ef1402e8dc5ea851bf0",
      "sourceName": "src/interfaces/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2",
      "artifacts": {
        "IERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "src/interfaces/IExecutor.sol": {
      "lastModificationDate": 1686898758329,
      "contentHash": "148383391087bd8cc92a15723569a974",
      "sourceName": "src/interfaces/IExecutor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IExecutor": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IExecutor.sol/IExecutor.json"
        }
      }
    },
    "src/interfaces/IMulticall.sol": {
      "lastModificationDate": 1686898758327,
      "contentHash": "42989af0ea7d03f3bc3bdbc5f44be045",
      "sourceName": "src/interfaces/IMulticall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IMulticall": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMulticall.sol/IMulticall.json"
        }
      }
    },
    "src/interfaces/IVaultOracle.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "d69be45295a50106d322cf45086f6175",
      "sourceName": "src/interfaces/IVaultOracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IVaultOracle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IVaultOracle.sol/IVaultOracle.json"
        }
      }
    },
    "src/interfaces/IZapV3.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "57ffb4a0583117f719d0527420f2e00f",
      "sourceName": "src/interfaces/IZapV3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IZapV3": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IZapV3.sol/IZapV3.json"
        }
      }
    },
    "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol": {
      "lastModificationDate": 1686898758330,
      "contentHash": "57e1e30d204f3e405b50e28dd51082fd",
      "sourceName": "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IPancakeV3MasterChef": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPancakeV3MasterChef.sol/IPancakeV3MasterChef.json"
        }
      }
    },
    "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol": {
      "lastModificationDate": 1686898758329,
      "contentHash": "e87a2493ebc995261a715a6755621733",
      "sourceName": "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "IPancakeV3QuoterV2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPancakeV3QuoterV2.sol/IPancakeV3QuoterV2.json"
        }
      }
    },
    "src/interfaces/pancake-v3/IPancakeV3Router.sol": {
      "lastModificationDate": 1686898758327,
      "contentHash": "8b26c8f4b8388b2885e1aa3a8f1f60d4",
      "sourceName": "src/interfaces/pancake-v3/IPancakeV3Router.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "IPancakeV3Router": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPancakeV3Router.sol/IPancakeV3Router.json"
        }
      }
    },
    "src/libraries/Constants.sol": {
      "lastModificationDate": 1686898758326,
      "contentHash": "5aa7531e92ad44e585438b83743a3d41",
      "sourceName": "src/libraries/Constants.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Constants": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Constants.sol/Constants.json"
        }
      }
    },
    "src/libraries/LibFixedPoint96.sol": {
      "lastModificationDate": 1686898758326,
      "contentHash": "8e1f0c78750d1949a4f462de286ba948",
      "sourceName": "src/libraries/LibFixedPoint96.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibFixedPoint96": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibFixedPoint96.sol/LibFixedPoint96.json"
        }
      }
    },
    "src/libraries/LibFullMath.sol": {
      "lastModificationDate": 1686898758331,
      "contentHash": "15fa0ac19b290c16f267290f81f1a3b3",
      "sourceName": "src/libraries/LibFullMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibFullMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibFullMath.sol/LibFullMath.json"
        }
      }
    },
    "src/libraries/LibLiquidityAmounts.sol": {
      "lastModificationDate": 1686898758334,
      "contentHash": "302c33d1faf7d31b2ad03b191bdac49e",
      "sourceName": "src/libraries/LibLiquidityAmounts.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibLiquidityAmounts": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibLiquidityAmounts.sol/LibLiquidityAmounts.json"
        }
      }
    },
    "src/libraries/LibShareUtil.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "970e342ed50b2e68e74ee2d915dd189f",
      "sourceName": "src/libraries/LibShareUtil.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/libraries/LibFullMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibShareUtil": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibShareUtil.sol/LibShareUtil.json"
        }
      }
    },
    "src/libraries/LibSqrtPriceX96.sol": {
      "lastModificationDate": 1686898758332,
      "contentHash": "2a2a22c9ff63a27f50d226cd3b5b7671",
      "sourceName": "src/libraries/LibSqrtPriceX96.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibSqrtPriceX96": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibSqrtPriceX96.sol/LibSqrtPriceX96.json"
        }
      }
    },
    "src/libraries/LibTickMath.sol": {
      "lastModificationDate": 1686898758348,
      "contentHash": "d7e363b396587c10359486032449e8f8",
      "sourceName": "src/libraries/LibTickMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibTickMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibTickMath.sol/LibTickMath.json"
        }
      }
    },
    "src/libraries/LibVaultDebt.sol": {
      "lastModificationDate": 1686898758340,
      "contentHash": "1a3a0b2f14992c6fd8c623f93550fe2b",
      "sourceName": "src/libraries/LibVaultDebt.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibVaultDebt": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibVaultDebt.sol/LibVaultDebt.json"
        }
      }
    },
    "src/oracles/BaseOracle.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "f410ced424696aa50097157ca4d1e607",
      "sourceName": "src/oracles/BaseOracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "src/interfaces/IChainlinkAggregator.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "BaseOracle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BaseOracle.sol/BaseOracle.json"
        }
      }
    },
    "src/oracles/CommonV3LiquidityOracle.sol": {
      "lastModificationDate": 1686898758356,
      "contentHash": "6a1bc132f0a631b65819d934073e5251",
      "sourceName": "src/oracles/CommonV3LiquidityOracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibLiquidityAmounts.sol",
        "src/libraries/LibSqrtPriceX96.sol",
        "src/libraries/LibTickMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "CommonV3LiquidityOracle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CommonV3LiquidityOracle.sol/CommonV3LiquidityOracle.json"
        }
      }
    },
    "src/oracles/PancakeV3VaultOracle.sol": {
      "lastModificationDate": 1686898758344,
      "contentHash": "ad4b6dbc5efcea7c31ea794f7555ae77",
      "sourceName": "src/oracles/PancakeV3VaultOracle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibLiquidityAmounts.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibSqrtPriceX96.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3VaultOracle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3VaultOracle.sol/PancakeV3VaultOracle.json"
        }
      }
    },
    "src/workers/PancakeV3Worker.sol": {
      "lastModificationDate": 1686905762171,
      "contentHash": "79d54ca38bbe4424494e14e515417de6",
      "sourceName": "src/workers/PancakeV3Worker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3Worker": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3Worker.sol/PancakeV3Worker.json"
        }
      }
    },
    "test/AutomatedVaultERC20.t.sol": {
      "lastModificationDate": 1686898758335,
      "contentHash": "9fe2db7b0666303a33232e70def5254a",
      "sourceName": "test/AutomatedVaultERC20.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "src/AutomatedVaultERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultERC20Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultERC20.t.sol/AutomatedVaultERC20Test.json"
        }
      }
    },
    "test/AutomatedVaultManagerIntegration.t.sol": {
      "lastModificationDate": 1686898758372,
      "contentHash": "eb8bd8daed416fe8f35897213223e810",
      "sourceName": "test/AutomatedVaultManagerIntegration.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "AutomatedVaultManagerIntegration.t": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManagerIntegration.t.sol/AutomatedVaultManagerIntegration.t.json"
        }
      }
    },
    "test/Bank.t.sol": {
      "lastModificationDate": 1686898758366,
      "contentHash": "cc21c4d0c78439f2a5ca4425b067fa04",
      "sourceName": "test/Bank.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "BankTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Bank.t.sol/BankTest.json"
        }
      }
    },
    "test/BaseOracle.t.sol": {
      "lastModificationDate": 1686898758351,
      "contentHash": "f6f43f6142f3a2741742fb4c971ab6fc",
      "sourceName": "test/BaseOracle.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/oracles/BaseOracle.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "BaseOracleHarness": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BaseOracle.t.sol/BaseOracleHarness.json"
        },
        "BaseOracleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BaseOracle.t.sol/BaseOracleTest.json"
        }
      }
    },
    "test/E2E.t.sol": {
      "lastModificationDate": 1686905762172,
      "contentHash": "62540222e09b0c2fdf2e0a64bac5a10e",
      "sourceName": "test/E2E.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibLiquidityAmounts.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibSqrtPriceX96.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/oracles/PancakeV3VaultOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/E2EFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "E2ETest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "E2E.t.sol/E2ETest.json"
        }
      }
    },
    "test/LibSqrtPriceX96.t.sol": {
      "lastModificationDate": 1686898758352,
      "contentHash": "abce0a32ee0c17ef79380b8452efbee3",
      "sourceName": "test/LibSqrtPriceX96.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibSqrtPriceX96.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibSqrtPriceX96UnitTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibSqrtPriceX96.t.sol/LibSqrtPriceX96UnitTest.json"
        }
      }
    },
    "test/LibVaultDebt.t.sol": {
      "lastModificationDate": 1686898758354,
      "contentHash": "82a89bcd90b8f3d2ec2e786fdf2e5ff3",
      "sourceName": "test/LibVaultDebt.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "src/libraries/LibVaultDebt.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "LibVaultDebtUnitTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "LibVaultDebt.t.sol/LibVaultDebtUnitTest.json"
        }
      }
    },
    "test/MoneyMarketForTest.t.sol": {
      "lastModificationDate": 1686910193012,
      "contentHash": "96aeb7d6dfead2e73c16cac664a1d88c",
      "sourceName": "test/MoneyMarketForTest.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/MoneyMarketForTest.sol",
        "test/mocks/MockERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MoneyMarketForTestTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MoneyMarketForTest.t.sol/MoneyMarketForTestTest.json"
        }
      }
    },
    "test/PancakeV3VaultOracle.t.sol": {
      "lastModificationDate": 1686898758408,
      "contentHash": "9a9b81bc729272d05a7801a163b1a529",
      "sourceName": "test/PancakeV3VaultOracle.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibLiquidityAmounts.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibSqrtPriceX96.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/oracles/PancakeV3VaultOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3VaultOracleHarness": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3VaultOracle.t.sol/PancakeV3VaultOracleHarness.json"
        },
        "PancakeV3VaultOracleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3VaultOracle.t.sol/PancakeV3VaultOracleTest.json"
        }
      }
    },
    "test/automated-vault-manager/AutomatedVaultManager_Deposit.t.sol": {
      "lastModificationDate": 1686898758345,
      "contentHash": "28c1ed3af40e03e5755f70768b725d10",
      "sourceName": "test/automated-vault-manager/AutomatedVaultManager_Deposit.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol",
        "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockVaultOracleAndExecutor.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultManagerDepositTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Deposit.t.sol/AutomatedVaultManagerDepositTest.json"
        }
      }
    },
    "test/automated-vault-manager/AutomatedVaultManager_Manage.t.sol": {
      "lastModificationDate": 1686898758347,
      "contentHash": "a32468dd50b686835b725e3bd5e5ef35",
      "sourceName": "test/automated-vault-manager/AutomatedVaultManager_Manage.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol",
        "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockVaultOracleAndExecutor.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultManagerManageTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Manage.t.sol/AutomatedVaultManagerManageTest.json"
        }
      }
    },
    "test/automated-vault-manager/AutomatedVaultManager_OpenVault.t.sol": {
      "lastModificationDate": 1686905762175,
      "contentHash": "e2b1341c240bb2d104096f08b49bcaf9",
      "sourceName": "test/automated-vault-manager/AutomatedVaultManager_OpenVault.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol",
        "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockVaultOracleAndExecutor.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultManagerOpenVaultTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_OpenVault.t.sol/AutomatedVaultManagerOpenVaultTest.json"
        }
      }
    },
    "test/automated-vault-manager/AutomatedVaultManager_Setters.t.sol": {
      "lastModificationDate": 1686905762176,
      "contentHash": "3075cc49942aaa7e8c69612e28d681f1",
      "sourceName": "test/automated-vault-manager/AutomatedVaultManager_Setters.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol",
        "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockVaultOracleAndExecutor.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultManagerSetAllowTokenTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Setters.t.sol/AutomatedVaultManagerSetAllowTokenTest.json"
        },
        "AutomatedVaultManagerSetMaxLeverageTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Setters.t.sol/AutomatedVaultManagerSetMaxLeverageTest.json"
        },
        "AutomatedVaultManagerSetMinimumDepositTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Setters.t.sol/AutomatedVaultManagerSetMinimumDepositTest.json"
        },
        "AutomatedVaultManagerSetToleranceBpsTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Setters.t.sol/AutomatedVaultManagerSetToleranceBpsTest.json"
        },
        "AutomatedVaultManagerSetVaultTokenImplementationTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Setters.t.sol/AutomatedVaultManagerSetVaultTokenImplementationTest.json"
        },
        "AutomatedVaultManagerSettersTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Setters.t.sol/AutomatedVaultManagerSettersTest.json"
        }
      }
    },
    "test/automated-vault-manager/AutomatedVaultManager_Withdraw.t.sol": {
      "lastModificationDate": 1686898758341,
      "contentHash": "d63b67a284823568a8ef3b4384e1776e",
      "sourceName": "test/automated-vault-manager/AutomatedVaultManager_Withdraw.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol",
        "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockVaultOracleAndExecutor.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "AutomatedVaultManagerWithdrawTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AutomatedVaultManager_Withdraw.t.sol/AutomatedVaultManagerWithdrawTest.json"
        }
      }
    },
    "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol": {
      "lastModificationDate": 1686905762177,
      "contentHash": "f7faf48c90056ad84ffc7403171265aa",
      "sourceName": "test/automated-vault-manager/BaseAutomatedVaultUnitTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockVaultOracleAndExecutor.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "BaseAutomatedVaultUnitTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BaseAutomatedVaultUnitTest.sol/BaseAutomatedVaultUnitTest.json"
        }
      }
    },
    "test/fixtures/BscFixture.f.sol": {
      "lastModificationDate": 1686898758345,
      "contentHash": "3ac862708769aa6cf25e9e5d039a0a4e",
      "sourceName": "test/fixtures/BscFixture.f.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "BscFixture": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BscFixture.f.sol/BscFixture.json"
        }
      }
    },
    "test/fixtures/E2EFixture.f.sol": {
      "lastModificationDate": 1686905762178,
      "contentHash": "27cf363ea9693b87f3c5b04b2b26437e",
      "sourceName": "test/fixtures/E2EFixture.f.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/FixedPointMathLib.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFixedPoint96.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibLiquidityAmounts.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibSqrtPriceX96.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/oracles/PancakeV3VaultOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "E2EFixture": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "E2EFixture.f.sol/E2EFixture.json"
        }
      }
    },
    "test/fixtures/PancakeV3WorkerExecutorBankIntegrationFixture.f.sol": {
      "lastModificationDate": 1686905762179,
      "contentHash": "eadcdf7ea0547b545cb21fe50720829a",
      "sourceName": "test/fixtures/PancakeV3WorkerExecutorBankIntegrationFixture.f.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3WorkerExecutorBankIntegrationFixture": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3WorkerExecutorBankIntegrationFixture.f.sol/PancakeV3WorkerExecutorBankIntegrationFixture.json"
        }
      }
    },
    "test/fixtures/PancakeV3WorkerFixture.f.sol": {
      "lastModificationDate": 1686905762179,
      "contentHash": "b0d2387ba330491648701bae930651f8",
      "sourceName": "test/fixtures/PancakeV3WorkerFixture.f.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3WorkerFixture": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3WorkerFixture.f.sol/PancakeV3WorkerFixture.json"
        }
      }
    },
    "test/fixtures/ProtocolActorFixture.f.sol": {
      "lastModificationDate": 1686905762181,
      "contentHash": "9075f83c4b8e1e5e126b9c6a182a9dd4",
      "sourceName": "test/fixtures/ProtocolActorFixture.f.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ProtocolActorFixture": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ProtocolActorFixture.f.sol/ProtocolActorFixture.json"
        }
      }
    },
    "test/helpers/DeployHelper.sol": {
      "lastModificationDate": 1686898758355,
      "contentHash": "70c427e306544d4d99cf6c5399c098c1",
      "sourceName": "test/helpers/DeployHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployHelper": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployHelper.sol/DeployHelper.json"
        }
      }
    },
    "test/helpers/PureLog.sol": {
      "lastModificationDate": 1686898758347,
      "contentHash": "ea3c21443ba5bfdf169e21a3bfd67bf8",
      "sourceName": "test/helpers/PureLog.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/console.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PureLog": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PureLog.sol/PureLog.json"
        }
      }
    },
    "test/integration/TC01.i.sol": {
      "lastModificationDate": 1686898758358,
      "contentHash": "b38b7bb62100a369755eb448123ea24e",
      "sourceName": "test/integration/TC01.i.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerExecutorBankIntegrationFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "TC01": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TC01.i.sol/TC01.json"
        }
      }
    },
    "test/integration/TC02.i.sol": {
      "lastModificationDate": 1686898758334,
      "contentHash": "e4caf84ac628fc25d198929a9c4df05d",
      "sourceName": "test/integration/TC02.i.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerExecutorBankIntegrationFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "TC02": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TC02.i.sol/TC02.json"
        }
      }
    },
    "test/integration/TC03.i.sol": {
      "lastModificationDate": 1686898758356,
      "contentHash": "f524287331ec89dd5930fdb571190efc",
      "sourceName": "test/integration/TC03.i.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IAdminFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ICollateralFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IFeeModel.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILendFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/ILiquidationFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IMoneyMarket.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/INonCollatBorrowFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/interfaces/IViewFacet.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibConstant.sol",
        "lib/alpaca-v2-money-market/solidity/contracts/money-market/libraries/LibDoublyLinkedList.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeCastLib.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/Bank.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/libraries/LibVaultDebt.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerExecutorBankIntegrationFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockMoneyMarket.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "TC03": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TC03.i.sol/TC03.json"
        }
      }
    },
    "test/mocks/MockBank.sol": {
      "lastModificationDate": 1686898758328,
      "contentHash": "6968c3a8accc6944dfae1caea472e56d",
      "sourceName": "test/mocks/MockBank.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol",
        "src/interfaces/IERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockBank": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockBank.sol/MockBank.json"
        }
      }
    },
    "test/mocks/MockERC20.sol": {
      "lastModificationDate": 1686898758349,
      "contentHash": "305e439d15735f06d1bb1e9663a3ba04",
      "sourceName": "test/mocks/MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockERC20.sol/MockERC20.json"
        }
      }
    },
    "test/mocks/MockMoneyMarket.sol": {
      "lastModificationDate": 1686898758350,
      "contentHash": "0d2b815f9382a54280f1c9392ac8e69e",
      "sourceName": "test/mocks/MockMoneyMarket.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "src/interfaces/IERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockMoneyMarket": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockMoneyMarket.sol/MockMoneyMarket.json"
        }
      }
    },
    "test/mocks/MockPancakeV3Worker.sol": {
      "lastModificationDate": 1686898758327,
      "contentHash": "90ad5135c5fc9ef8f1648d8524760112",
      "sourceName": "test/mocks/MockPancakeV3Worker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol",
        "src/interfaces/IERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockPancakeV3Worker": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockPancakeV3Worker.sol/MockPancakeV3Worker.json"
        }
      }
    },
    "test/mocks/MockVaultOracleAndExecutor.sol": {
      "lastModificationDate": 1686898758330,
      "contentHash": "0d97b91d6169c6760647c2fc9b51b09d",
      "sourceName": "test/mocks/MockVaultOracleAndExecutor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/oracles/BaseOracle.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockVaultOracleAndExecutor": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockVaultOracleAndExecutor.sol/MockVaultOracleAndExecutor.json"
        }
      }
    },
    "test/pancake-v3-worker/PancakeV3Worker_DecreasePosition.t.sol": {
      "lastModificationDate": 1686898758344,
      "contentHash": "7e673272995c9766105a69929244a35d",
      "sourceName": "test/pancake-v3-worker/PancakeV3Worker_DecreasePosition.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3WorkerDecreasePositionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3Worker_DecreasePosition.t.sol/PancakeV3WorkerDecreasePositionTest.json"
        }
      }
    },
    "test/pancake-v3-worker/PancakeV3Worker_Harvest.t.sol": {
      "lastModificationDate": 1686898758348,
      "contentHash": "9f33190f4f1376ab99f817347d41a53b",
      "sourceName": "test/pancake-v3-worker/PancakeV3Worker_Harvest.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3WorkerHarvestTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3Worker_Harvest.t.sol/PancakeV3WorkerHarvestTest.json"
        }
      }
    },
    "test/pancake-v3-worker/PancakeV3Worker_IncreasePosition.t.sol": {
      "lastModificationDate": 1686898758359,
      "contentHash": "ad654c0d5d57e4c5604deb5e39fbdae6",
      "sourceName": "test/pancake-v3-worker/PancakeV3Worker_IncreasePosition.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3WorkerIncreasePositionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3Worker_IncreasePosition.t.sol/PancakeV3WorkerIncreasePositionTest.json"
        }
      }
    },
    "test/pancake-v3-worker/PancakeV3Worker_Transfer.t.sol": {
      "lastModificationDate": 1686898758346,
      "contentHash": "5623e941bff5ea25503263620e3272a9",
      "sourceName": "test/pancake-v3-worker/PancakeV3Worker_Transfer.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/fixtures/PancakeV3WorkerFixture.f.sol",
        "test/fixtures/ProtocolActorFixture.f.sol",
        "test/helpers/DeployHelper.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PancakeV3WorkerTransferTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PancakeV3Worker_Transfer.t.sol/PancakeV3WorkerTransferTest.json"
        }
      }
    },
    "test/pcs-v3-executor-01/PCSV3Executor01_Action.t.sol": {
      "lastModificationDate": 1686898758347,
      "contentHash": "d49aefccdc6e58cdda805d95e8654875",
      "sourceName": "test/pcs-v3-executor-01/PCSV3Executor01_Action.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PCSV3Executor01ActionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01ActionTest.json"
        },
        "PCSV3Executor01BorrowTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01BorrowTest.json"
        },
        "PCSV3Executor01ClosePositionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01ClosePositionTest.json"
        },
        "PCSV3Executor01DecreasePositionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01DecreasePositionTest.json"
        },
        "PCSV3Executor01IncreasePositionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01IncreasePositionTest.json"
        },
        "PCSV3Executor01OpenPositionTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01OpenPositionTest.json"
        },
        "PCSV3Executor01PancakeV3SwapForkTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01PancakeV3SwapForkTest.json"
        },
        "PCSV3Executor01RepayTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01RepayTest.json"
        },
        "PCSV3Executor01TransferTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_Action.t.sol/PCSV3Executor01TransferTest.json"
        }
      }
    },
    "test/pcs-v3-executor-01/PCSV3Executor01_OnWithdraw.t.sol": {
      "lastModificationDate": 1686898758359,
      "contentHash": "4ea8bc88eb1edead5d4f97c49d1f66b3",
      "sourceName": "test/pcs-v3-executor-01/PCSV3Executor01_OnWithdraw.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3QuoterV2.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/fixtures/BscFixture.f.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockBank.sol",
        "test/mocks/MockERC20.sol",
        "test/mocks/MockPancakeV3Worker.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PCSV3Executor01OnWithdrawForkTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_OnWithdraw.t.sol/PCSV3Executor01OnWithdrawForkTest.json"
        },
        "PCSV3Executor01OnWithdrawTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_OnWithdraw.t.sol/PCSV3Executor01OnWithdrawTest.json"
        }
      }
    },
    "test/pcs-v3-executor-01/PCSV3Executor01_SweepToWorker.t.sol": {
      "lastModificationDate": 1686898758349,
      "contentHash": "77de20cc50c55f8e293bc83be44c7fe1",
      "sourceName": "test/pcs-v3-executor-01/PCSV3Executor01_SweepToWorker.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "lib/solmate/src/tokens/ERC20.sol",
        "lib/solmate/src/utils/SafeTransferLib.sol",
        "src/AutomatedVaultERC20.sol",
        "src/AutomatedVaultManager.sol",
        "src/executors/Executor.sol",
        "src/executors/PCSV3Executor01.sol",
        "src/interfaces/IAutomatedVaultERC20.sol",
        "src/interfaces/IBank.sol",
        "src/interfaces/IChainlinkAggregator.sol",
        "src/interfaces/ICommonV3Pool.sol",
        "src/interfaces/ICommonV3PositionManager.sol",
        "src/interfaces/IERC20.sol",
        "src/interfaces/IExecutor.sol",
        "src/interfaces/IMulticall.sol",
        "src/interfaces/IVaultOracle.sol",
        "src/interfaces/IZapV3.sol",
        "src/interfaces/pancake-v3/IPancakeV3MasterChef.sol",
        "src/interfaces/pancake-v3/IPancakeV3Router.sol",
        "src/libraries/Constants.sol",
        "src/libraries/LibFullMath.sol",
        "src/libraries/LibShareUtil.sol",
        "src/libraries/LibTickMath.sol",
        "src/oracles/BaseOracle.sol",
        "src/workers/PancakeV3Worker.sol",
        "test/helpers/DeployHelper.sol",
        "test/mocks/MockERC20.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PCSV3Executor01SweepToWorkerTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PCSV3Executor01_SweepToWorker.t.sol/PCSV3Executor01SweepToWorkerTest.json"
        }
      }
    }
  }
}